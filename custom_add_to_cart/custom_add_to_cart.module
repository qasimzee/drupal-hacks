<?php


function custom_add_to_cart_form($form, &$form_state, $product_id) {
    $node = node_load ($product_id);
    $nodew = entity_metadata_wrapper('node', $node);

    $Options = array ();
    // Step through variations for this product to build a drop-down
    foreach($nodew->field_product->value() as $Variation) {
        $Options [$Variation->product_id] = $Variation->title;
    }
    $form['product_id'] = array(
            '#type' => 'select',
            '#options' => $Options
            );

    $form['submit'] = array(
            '#type' => 'submit',
            '#default_value' => 'all',
            '#value' => t('Add To Cart'),
            );
    return $form;
}

function custom_add_to_cart_form_submit($form, &$form_state) {
    // Get the values and assign to variables for easy access.

    global $user;
    $Order = null;
    $product_id = $form_state['values']['product_id'];

    // Load the current cart for the current user.  If there is no cart, then add
    // (create) a new order
    if (custom_add_to_cart_is_cart_empty()){
        $Order = commerce_order_new($user->uid, 'checkout_checkout');
        commerce_order_save($Order);
    }
    else{
        $Order = commerce_cart_order_load($user->uid); 
        $line_items = $Order->commerce_line_items['und'];
        foreach ($line_items as $lid) {
            commerce_line_item_delete ($lid['line_item_id']);
        }
    }

    
    
    $product = commerce_product_load($product_id);
    $line_item = commerce_product_line_item_new($product, 1, $Order->order_id);

    // Save the line item to get its ID.
    commerce_line_item_save($line_item);

    // Add the line item to the order using a wrapper.
    $order_wrapper = entity_metadata_wrapper('commerce_order', $Order);
    $order_wrapper->commerce_line_items[] = $line_item;

    // Save the order again to update its line item reference field.
    commerce_order_save($Order);
}

function custom_add_to_cart_is_cart_empty() {
    global $user;

    if ($order = commerce_cart_order_load($user->uid)) {
        $wrapper = entity_metadata_wrapper('commerce_order', $order);

        // If there are one or more products in the cart...
        if (commerce_line_items_quantity($wrapper->commerce_line_items,
                    commerce_product_line_item_types()) > 0) {
            return FALSE;
        }
    }

    return TRUE;
}
